package views

import (
	"github.com/Dionid/teleblog/libs/templu"
	"fmt"
)

type SeoMetadata struct {
	Title       string
	Description string
	Image       string
	Url         string
	Type        string // website, article, etc.
}

type BaseLayoutData struct {
	Seo SeoMetadata

	YandexMetrikaCounter string // Yandex.Metrika counter ID
	GoogleAnalyticsCounter    string // Google Analytics ID

	PrimaryColor string // Primary color for the theme, used in CSS variables
	BgImage string // Background image for the layout, can be used in CSS
	CustomCss string // Custom CSS styles to be injected into the layout
	FavIcon string // URL to the favicon image

	CanonicalUrl string // Canonical URL for the page, used for SEO
}

templ BaseLayout(data BaseLayoutData) {
	<!DOCTYPE html>
	<html data-theme="bumblebee" lang="ru">
		<head>
			<title>{ data.Seo.Title }</title>
			if data.Seo.Description != "" {
				<meta name="description" content={ data.Seo.Description }/>
			} else {
				<meta name="description" content={ data.Seo.Description }/>
			}
			if data.CanonicalUrl != "" {
				<link rel="canonical" href={ data.CanonicalUrl }/>
			}
			<meta property="og:site_name" content={ data.Seo.Title }/>
			<meta property="og:title" content={ data.Seo.Title }/>
			<meta property="og:description" content={ data.Seo.Description }/>
			<meta property="og:url" content={ data.Seo.Url }/>
			if data.Seo.Image != "" {
				<meta property="og:image" content={ data.Seo.Image }/>
				<meta name="twitter:image" content={ data.Seo.Image }/>
			} else {
				<meta property="og:image" content={ data.Seo.Image }/>
				<meta name="twitter:image" content={ data.Seo.Image }/>
			}
			<meta property="og:type" content={ data.Seo.Type }/>
			<meta name="twitter:card" content="summary_large_image"/>
			<meta property="twitter:domain" content={ data.Seo.Url }/>
			<meta property="twitter:url" content={ data.Seo.Url }/>
			<meta name="twitter:title" content={ data.Seo.Title }/>
			<meta name="twitter:description" content={ data.Seo.Description }/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0">
			<link rel="stylesheet" href={ templu.PathWithVersion(ctx, "/public/style.css") } />
			<link rel="preconnect" href="https://fonts.googleapis.com" />
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
			<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet" />
			if data.FavIcon != "" {
				<link rel="icon" sizes="96x96" href={ templ.SafeURL(data.FavIcon) }/>
			}
			// TODO: return in future
			// <link rel="apple-touch-icon" sizes="57x57" href="/public/favico/apple-icon-57x57.png"/>
			// <link rel="apple-touch-icon" sizes="60x60" href="/public/favico/apple-icon-60x60.png"/>
			// <link rel="apple-touch-icon" sizes="72x72" href="/public/favico/apple-icon-72x72.png"/>
			// <link rel="apple-touch-icon" sizes="76x76" href="/public/favico/apple-icon-76x76.png"/>
			// <link rel="apple-touch-icon" sizes="114x114" href="/public/favico/apple-icon-114x114.png"/>
			// <link rel="apple-touch-icon" sizes="120x120" href="/public/favico/apple-icon-120x120.png"/>
			// <link rel="apple-touch-icon" sizes="144x144" href="/public/favico/apple-icon-144x144.png"/>
			// <link rel="apple-touch-icon" sizes="152x152" href="/public/favico/apple-icon-152x152.png"/>
			// <link rel="apple-touch-icon" sizes="180x180" href="/public/favico/apple-icon-180x180.png"/>
			// <link rel="icon" type="image/png" sizes="192x192"  href="/public/favico/android-icon-192x192.png"/>
			// <link rel="icon" type="image/png" sizes="32x32" href="/public/favico/favicon-32x32.png"/>
			// <link rel="icon" type="image/png" sizes="96x96" href="/public/favico/favicon-96x96.png"/>
			// <link rel="icon" type="image/png" sizes="16x16" href="/public/favico/favicon-16x16.png"/>
			// <link rel="manifest" href="/public/favico/manifest.json"/>
			<meta name="msapplication-TileColor" content="#ffffff"/>
			<meta name="msapplication-TileImage" content="/public/favico/ms-icon-144x144.png"/>
			<meta name="theme-color" content="#ffffff"/>
			if data.BgImage != "" {
				@templ.Raw(
					fmt.Sprintf(
						`<style>
							body {
								background-image: url(%s);
								background-size: cover;
								background-position: center;
								background-repeat: no-repeat;
								background-attachment: fixed;
							}
						</style>`,
						data.BgImage,
					),
				)
			}
		</head>
		<body style="min-height: 100vh; display: flex;">
			{ children... }
		</body>
		<script defer src="https://cdn.jsdelivr.net/npm/vue@3.4.27/dist/vue.global.min.js"></script>
		<!-- Google tag (gtag.js) -->
		<script async src={ "https://www.googletagmanager.com/gtag/js?id=" + data.GoogleAnalyticsCounter }></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', {{ data.GoogleAnalyticsCounter }});
		</script>
		<!-- Yandex.Metrika counter -->
		<script type="text/javascript" >
			(function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
			m[i].l=1*new Date();
			for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
			k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
			(window, document, "script", "https://mc.yandex.com/metrika/tag.js", "ym");

			ym(parseInt({{ data.YandexMetrikaCounter }}), "init", {
					clickmap:true,
					trackLinks:true,
					accurateTrackBounce:true
			});
		</script>
		<noscript><div><img src={ "https://mc.yandex.com/watch/" + data.YandexMetrikaCounter } style="position:absolute; left:-9999px;" alt="" /></div></noscript>
		<!-- /Yandex.Metrika counter -->
		@templ.Raw(
			fmt.Sprintf(
				`<style>
				:root {
					--p: %s;
				}
			</style>`,
			 	templu.OrDefaultString(data.PrimaryColor, "89.51 0.2132 96.61"),
			),
		)
		if data.CustomCss != "" {
			@templ.Raw(
				fmt.Sprintf(
					`<style>%s</style>`,
					data.CustomCss,
				),
			)
		}
		<link rel="stylesheet" href={ templu.PathWithVersion(ctx, "/public/custom.css") } />
	</html>
}